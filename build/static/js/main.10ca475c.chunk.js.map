{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/persons.js","components/Notifications.js","App.js","index.js"],"names":["Filter","_ref","onChange","value","react_default","a","createElement","PersonForm","onSubmit","onNumberChange","numberValue","type","baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","delete","concat","put","Notifications","message","msg","errormsg","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNumber","_useState7","_useState8","search","setSearch","_useState9","_useState10","setMessage","useEffect","personService","initialPersons","removePerson","personToBeDeleted","filter","person","name","window","confirm","res","personsWithoutDeletedPerson","objectSpread","setTimeout","components_Notifications","components_Filter","e","target","components_PersonForm","preventDefault","find","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","p","changedPerson","number","map","catch","error","n","_iterator","Symbol","iterator","next","done","err","return","console","log","letters","toLowerCase","includes","key","onClick","showNumbers","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.10ca475c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ onChange, value }) => {\n  return (\n    <div>\n      filter shown with: <input onChange={onChange} value={value} />\n    </div>\n  );\n};\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmit,\n  onChange,\n  value,\n  onNumberChange,\n  numberValue\n}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        <div>\n          name: <input onChange={onChange} value={value} />\n        </div>\n        <div>\n          number: <input onChange={onNumberChange} value={numberValue} />\n        </div>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\nexport default PersonForm;\n","import axios from \"axios\";\n// When only the back end is seperately in the internet\n// const baseUrl = \"https://tranquil-plateau-40368.herokuapp.com/api/persons\";\n// When the fronends build is copied to backend\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request;\n};\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\nexport default { getAll, create, remove, update };\n","import React from \"react\";\n\nconst Notifications = ({ message }) => {\n  if (message.msg === null && message.errormsg === null) {\n    return null;\n  }\n  if (message.msg !== null) {\n    return <div className=\"message\">{message.msg}</div>;\n  }\n  return <div className=\"error\">{message.errormsg}</div>;\n};\nexport default Notifications;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/persons\";\nimport Notifications from \"./components/Notifications\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    // { name: \"Johanna Rousi\", number: \"09-463265142\" }\n  ]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNumber] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [message, setMessage] = useState({ msg: null, errormsg: null });\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => setPersons(initialPersons));\n  }, []);\n\n  const addName = e => {\n    e.preventDefault();\n    // checking that the person does not exist already\n    if (!persons.find(person => person.name === newName)) {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      };\n\n      personService\n        .create(personObject)\n        .then(data => {\n          setPersons(persons.concat(data));\n          setMessage({ ...message, msg: `Added ${newName}` });\n          setNewName(\"\");\n          setNumber(\"\");\n          setTimeout(() => {\n            setMessage({ ...message, msg: null });\n          }, 5000);\n        })\n        .catch(error => {\n          console.log(error.response.data);\n          setMessage({ ...message, errormsg: error.response.data.error });\n          setNewName(\"\");\n          setNumber(\"\");\n          setTimeout(() => {\n            setMessage({ ...message, msg: null });\n          }, 5000);\n        });\n    } else {\n      for (let p of persons) {\n        if (p.name === newName) {\n          if (\n            window.confirm(\n              `${newName} is already added to phonebook, replace the old number with a new one?`\n            )\n          ) {\n            const changedPerson = { ...p, number: newNumber };\n\n            personService\n              .update(p.id, changedPerson)\n              .then(data => {\n                setPersons(\n                  persons.map(person => (person.id !== p.id ? person : data))\n                );\n              })\n              .catch(error => {\n                setMessage({\n                  ...message,\n                  errormsg: `Information of ${newName} has already been removed from server`\n                });\n                setPersons(persons.filter(n => n.id !== p.id));\n                setTimeout(() => {\n                  setMessage({ ...message, errormsg: null });\n                }, 5000);\n              });\n            setMessage({ ...message, msg: `${newName}'s number was changed` });\n            setNewName(\"\");\n            setNumber(\"\");\n            setTimeout(() => {\n              setMessage({ ...message, msg: null });\n            }, 5000);\n          } else {\n            setNewName(\"\");\n            setNumber(\"\");\n          }\n        }\n      }\n    }\n  };\n\n  const removePerson = id => {\n    let personToBeDeleted = persons.filter(person => person.id === id)[0].name;\n    if (window.confirm(`Do you really want to delete ${personToBeDeleted}?`)) {\n      personService.remove(id).then(res => {\n        let personsWithoutDeletedPerson = persons.filter(\n          person => person.id !== id\n        );\n        setPersons(personsWithoutDeletedPerson);\n      });\n      setMessage({ ...message, msg: `${personToBeDeleted} was deleted` });\n\n      setTimeout(() => {\n        setMessage({ ...message, msg: null });\n      }, 5000);\n    }\n  };\n\n  const showNumbers = () => {\n    let letters = search.toLowerCase();\n    return search\n      ? persons\n          .filter(person => person.name.toLowerCase().includes(letters))\n          .map(person => (\n            <p key={person.name}>\n              {person.name} {person.number}{\" \"}\n              <button onClick={() => removePerson(person.id)}>Delete</button>\n            </p>\n          ))\n      : persons.map(person => (\n          <p key={person.id}>\n            {person.name} {person.number}{\" \"}\n            <button onClick={() => removePerson(person.id)}>Delete</button>\n          </p>\n        ));\n  };\n\n  const onChange = e => {\n    let value = e.target.value;\n    setNewName(value);\n  };\n  const onNumberChange = e => {\n    let value = e.target.value;\n    setNumber(value);\n  };\n  const onFilterChange = e => {\n    let value = e.target.value;\n    setSearch(value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications message={message} />\n      <Filter onChange={onFilterChange} value={search} />\n      <h3>Add a new number</h3>\n      <PersonForm\n        onSubmit={addName}\n        onChange={onChange}\n        value={newName}\n        onNumberChange={onNumberChange}\n        numberValue={newNumber}\n      />\n\n      <h3>Numbers</h3>\n      {showNumbers()}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}